/*
 * Strava API v3
 *
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * API version: 3.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package strava

import (
	"time"
)

type Lap struct {
	// The unique identifier of this lap
	ID       int64         `bson:"id" json:"id,omitempty"`
	Activity *MetaActivity `bson:"activity" json:"activity,omitempty"`
	Athlete  *MetaAthlete  `bson:"athlete" json:"athlete,omitempty"`
	// The lap's average cadence
	AverageCadence float64 `bson:"average_cadence" json:"average_cadence,omitempty"`
	// The lap's average speed
	AverageSpeed float64 `bson:"average_speed" json:"average_speed,omitempty"`
	// The lap's distance, in meters
	Distance float64 `bson:"distance" json:"distance,omitempty"`
	// The lap's elapsed time, in seconds
	ElapsedTime int64 `bson:"elapsed_time" json:"elapsed_time,omitempty"`
	// The start index of this effort in its activity's stream
	StartIndex int64 `bson:"start_index" json:"start_index,omitempty"`
	// The end index of this effort in its activity's stream
	EndIndex int64 `bson:"end_index" json:"end_index,omitempty"`
	// The index of this lap in the activity it belongs to
	LapIndex int64 `bson:"lap_index" json:"lap_index,omitempty"`
	// The maximum speed of this lat, in meters per second
	MaxSpeed float64 `bson:"max_speed" json:"max_speed,omitempty"`
	// The lap's moving time, in seconds
	MovingTime int64 `bson:"moving_time" json:"moving_time,omitempty"`
	// The name of the lap
	Name string `bson:"name" json:"name,omitempty"`
	// The athlete's pace zone during this lap
	PaceZone int64 `bson:"pace_zone" json:"pace_zone,omitempty"`
	Split    int64 `bson:"split" json:"split,omitempty"`
	// The time at which the lap was started.
	StartDate time.Time `bson:"start_date" json:"start_date,omitempty"`
	// The time at which the lap was started in the local timezone.
	StartDateLocal time.Time `bson:"start_date_local" json:"start_date_local,omitempty"`
	// The elevation gain of this lap, in meters
	TotalElevationGain float64 `bson:"total_elevation_gain" json:"total_elevation_gain,omitempty"`
}
